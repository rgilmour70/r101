[{"/Users/ronaldgilmour/Sites/r101/src/index.js":"1","/Users/ronaldgilmour/Sites/r101/src/App.js":"2","/Users/ronaldgilmour/Sites/r101/src/components/Splash.js":"3"},{"size":198,"mtime":1609940485110,"results":"4","hashOfConfig":"5"},{"size":4149,"mtime":1612295527852,"results":"6","hashOfConfig":"5"},{"size":1035,"mtime":1612278983969,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"o29x4n",{"filePath":"11","messages":"12","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/ronaldgilmour/Sites/r101/src/index.js",[],["17","18"],"/Users/ronaldgilmour/Sites/r101/src/App.js",["19","20","21","22","23","24","25","26","27","28","29","30"],"// eslint-disable-next-line\nimport React, { useState, useEffect } from 'react';\nimport './App.scss';\n// import ProgressBar from './components/progressBar';\n// import Slide from './components/slide';\n// import Navigation from './components/navigation';\n// import  GetContent  from './utils/DataService';\nimport Splash from './components/Splash';\n\nconst queryString = require('query-string');\n\nconst App = () => {\n\n\tconst tutorialSlug = queryString.parse(window.location.search).t;\n\n\tconst [slug, setSlug] = useState(tutorialSlug);\n\tconst [lightColor, setLightColor] = useState('');\n\tconst [currentSlide, setCurrentSlide] = useState(0); // really current set\n\tconst [isLoading, setIsLoading] = useState(true);\n\tconst [navFrozen, setNavFrozen] = useState(false);\n\tconst [record, setRecord] = useState([]);\n\tconst [content, setContent] = useState([]);\n\n\tuseEffect(() => {\n\t\t// Grab data from the appropriate JSON file\n\t\t// https://www.pluralsight.com/guides/fetch-data-from-a-json-file-in-a-react-app\n\t\tconst getData = () => {\n\t\t\tfetch(`data/${slug}.json`\n\t\t\t, {\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t'Accept': 'application/json'\n\t\t\t\t}\n\t\t\t}\n\t\t\t).then(function(response) {\n\t\t\t\treturn response.json();\n\t\t\t});\n\t\t}\n\t\tconst d = getData();\n\n\t\tsetContent(d);\n\t},[slug]);\n\n\n\t// I wish I could do this in the CSS!\n\tswitch (slug) {\n\t\tcase 'scholarly': \n\t\t\tdocument.body.style.backgroundColor = \"#e20e41\";\n\t\t\tbreak;\n\t\tcase 'evaluating':\n\t\t\tdocument.body.style.backgroundColor = \"#f36943\";\n\t\t\tbreak;\n\t\tcase 'apa':\n\t\tcase 'mla':\n\t\t\tdocument.body.style.backgroundColor = \"#ff169e\";\n\t\t\tbreak;\n\t\tcase 'plagiarism':\n\t\t\tdocument.body.style.backgroundColor = \"#288285\";\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tdocument.body.style.backgroundColor = \"#ccc\";\n\t}\n\n\n\t// navigation between slides\n\t// handleSlideChange = (next, numberOfSlides) => {\n\t// \tconst freezableTypes = ['classify', 'multipleChoice', 'textAnswer', 'order', 'range', 'tagIt', 'dragText'];\n\t// \tconst nextType = this.state.content[next].type;\n\n\t// \tlet seen = false;\n\n\t// \tthis.state.record.forEach((e) => {\n\t// \t\tif (e.slideId === next) {\n\t// \t\t\tseen = true;\n\t// \t\t}\n\t// \t});\n\n\t\t// if ( !freezableTypes.includes(nextType) || seen ) { // or question registered in record?\n\t\t// \tthis.setState({\tnavFrozen: false });\n\t\t// } else {\n\t\t// \tthis.setState({ navFrozen: true });\n\t\t// }\n\n\t\t// if (next >= 0 && next <= numberOfSlides) {\n\t\t// \tthis.setState({ \n\t\t// \t\tcurrentSlide: next, \n\t\t// \t\ttried: false, \n\t\t// \t\tfeedback:'', \n\t\t// \t\tsliderValue: 0\n\t\t// \t});\n\t\t// }\n\t\t// console.log(this.state.record);\n\t//}\n\n\t// recordAnswer = (currentSlide, contentId, answer, isCorrect) => {\n\t// \tthis.setState(state => {\n\t// \t\tconst answerObj = {\n\t// \t\t\tslideId: this.state.currentSlide,\n\t// \t\t\tcontentId: contentId,\n\t// \t\t\tfirstAnswer: answer,\n\t// \t\t\tfirstAnswerCorrect: isCorrect\n\t// \t\t};\n\t// \t\tconst record = state.record.concat(answerObj);\n\t// \t\treturn { record\t};\n\t// \t});\n\t// }\n\n\t// freezeNav = () => {\n\t// \tthis.setState({ navFrozen : true });\n\t// }\n\n\t// thawNav = () => {\n\t// \tthis.setState({ navFrozen : false });\n\t// }\n\n\t// delays loading to allow for splash screen\n\t// componentDidMount() {\n\t// \tconst setLoaded = () => {\n\t// \t\tthis.setState({ isLoading : false });\n\t// \t}\n\t// \tsetTimeout(setLoaded, 2000);\n\t// }\n\n\t//if (isLoading) {\n\t\treturn (\n\t\t\t<div className={'App ' + slug}>\n\t\t\t\t<Splash />\n\t\t\t</div>\n\t\t)\n\t//} // else {\n\t// \treturn (\n\t// \t\t<Fragment>\n\t// \t\t\t<ProgressBar \n\t// \t\t\t\tcurrentSlide={this.state.currentSlide}\n\t// \t\t\t\tnumberOfSlides={this.state.content.length}\n\t// \t\t\t/>\n\t// \t\t\t{this.state.content.map((s, i) => \n\t// \t\t\t\t<Slide \n\t// \t\t\t\t\tkey={i}\n\t// \t\t\t\t\tslideId={i}\n\t// \t\t\t\t\tcurrentSlide={this.state.currentSlide}\n\t// \t\t\t\t\tcontent={this.state.content[i]}\n\t// \t\t\t\t\trecordAnswer={this.recordAnswer}\n\t// \t\t\t\t\tfreezeNav={this.freezeNav}\n\t// \t\t\t\t\tthawNav={this.thawNav}\n\t// \t\t\t\t\trecord={this.state.record}\n\t// \t\t\t\t/>\n\t// \t\t\t)}\n\t// \t\t\t<Navigation \n\t// \t\t\t\tslideNumber={this.state.currentSlide} \n\t// \t\t\t\tnumberOfSlides={this.state.content.length} \n\t// \t\t\t\tonNavEvent={this.handleSlideChange} \n\t// \t\t\t\tnavFrozen={this.state.navFrozen}\n\t// \t\t\t/>\n\t// \t\t</Fragment>\n\t// \t);\n\t// }\n\n}\n\nexport default App;\n","/Users/ronaldgilmour/Sites/r101/src/components/Splash.js",[],["31","32"],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":16,"column":15,"nodeType":"39","messageId":"40","endLine":16,"endColumn":22},{"ruleId":"37","severity":1,"message":"41","line":17,"column":9,"nodeType":"39","messageId":"40","endLine":17,"endColumn":19},{"ruleId":"37","severity":1,"message":"42","line":17,"column":21,"nodeType":"39","messageId":"40","endLine":17,"endColumn":34},{"ruleId":"37","severity":1,"message":"43","line":18,"column":9,"nodeType":"39","messageId":"40","endLine":18,"endColumn":21},{"ruleId":"37","severity":1,"message":"44","line":18,"column":23,"nodeType":"39","messageId":"40","endLine":18,"endColumn":38},{"ruleId":"37","severity":1,"message":"45","line":19,"column":9,"nodeType":"39","messageId":"40","endLine":19,"endColumn":18},{"ruleId":"37","severity":1,"message":"46","line":19,"column":20,"nodeType":"39","messageId":"40","endLine":19,"endColumn":32},{"ruleId":"37","severity":1,"message":"47","line":20,"column":9,"nodeType":"39","messageId":"40","endLine":20,"endColumn":18},{"ruleId":"37","severity":1,"message":"48","line":20,"column":20,"nodeType":"39","messageId":"40","endLine":20,"endColumn":32},{"ruleId":"37","severity":1,"message":"49","line":21,"column":9,"nodeType":"39","messageId":"40","endLine":21,"endColumn":15},{"ruleId":"37","severity":1,"message":"50","line":21,"column":17,"nodeType":"39","messageId":"40","endLine":21,"endColumn":26},{"ruleId":"37","severity":1,"message":"51","line":22,"column":9,"nodeType":"39","messageId":"40","endLine":22,"endColumn":16},{"ruleId":"33","replacedBy":"52"},{"ruleId":"35","replacedBy":"53"},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'setSlug' is assigned a value but never used.","Identifier","unusedVar","'lightColor' is assigned a value but never used.","'setLightColor' is assigned a value but never used.","'currentSlide' is assigned a value but never used.","'setCurrentSlide' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'navFrozen' is assigned a value but never used.","'setNavFrozen' is assigned a value but never used.","'record' is assigned a value but never used.","'setRecord' is assigned a value but never used.","'content' is assigned a value but never used.",["54"],["55"],"no-global-assign","no-unsafe-negation"]